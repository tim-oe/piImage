---
- name: "initialize packages for laptop"
  hosts: "all"
  become: true
  tasks:
    - name: "Update apt repo and cache."
      apt:
        update_cache: true
        cache_valid_time: 3600
    - name: "Ansible apt install base deps"
      apt:
        name: "{{ item }}"
        state: "present"
      loop:
        - "curl"
        - "gnupg"
        - "gpg"
        - "wget"
        - "snapd"
    - name: "add and sign chrome repo"
      block:
        - name: "chrome repo key"
          ansible.builtin.get_url:
            url: "https://dl-ssl.google.com/linux/linux_signing_key.pub"
            dest: "/tmp/google.pub"
            mode: "0644"
            force: true
        - name: "chrome sign key"
          command:
            "bash -c 'gpg --no-default-keyring --keyring /etc/apt/keyrings/google-chrome.gpg\
            \ --import /tmp/google.pub'"
        - name: "chrome apt source"
          ansible.builtin.apt_repository:
            repo:
              "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/\
              \ stable main"
            filename: "google-chrome"
            state: "present"
            update_cache: true
    - name: "add and sign wine repo"
      block:
        - name: "wine repo key"
          ansible.builtin.get_url:
            url: "https://dl.winehq.org/wine-builds/winehq.key"
            dest: "/etc/apt/keyrings/winehq-archive.key"
            mode: "0644"
            force: true
        - name: "wine repo source"
          ansible.builtin.get_url:
            url:
              "https://dl.winehq.org/wine-builds/ubuntu/dists/{{ ansible_distribution_release\
              \ }}/winehq-{{ ansible_distribution_release }}.sources"
            dest: "/etc/apt/sources.list.d/winehq-{{ ansible_distribution_release }}.sources"
            mode: "0644"
            force: true
        - name: "Update apt repo and cache."
          apt:
            update_cache: true
            cache_valid_time: 3600
    - name: "add and sign virtualbox repo"
      block:
        - name: "virtualbox repo key"
          ansible.builtin.get_url:
            url: "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
            dest: "/tmp/oracle_vbox_2016.asc"
            mode: "0644"
            force: true
        - name: "virtualbox sign key"
          command:
            "bash -c 'cat /tmp/oracle_vbox_2016.asc | gpg --dearmor --yes --output\
            \ /usr/share/keyrings/oracle-virtualbox-2016.gpg'"
        - name: "virtualbox apt source"
          ansible.builtin.apt_repository:
            repo:
              "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg]\
              \ http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release\
              \ }} contrib"
            filename: "virtualbox"
            state: "present"
            update_cache: true
    - name: "Update apt added repo and cache."
      apt:
        update_cache: true
        cache_valid_time: 3600
    - name: "apt install deps"
      apt:
        name: "{{ item }}"
        install_recommends: true
        state: "present"
      loop:
        - "filezilla"
        - "gnome-tweaks"
        - "google-chrome-stable"
        - "gparted"
        - "htop"
        - "libreoffice-gnome"
        - "libreoffice-calc"
        - "libreoffice-writer"
        - "libreoffice-math"
        - "p7zip-full"
        - "putty"
        - "putty-tools"
        - "remmina"
        - "shutter"
        - "virtualbox-7.0"
        - "xrdp"
    - name: "get puttygen.exe"
      ansible.builtin.get_url:
        url: "https://the.earth.li/~sgtatham/putty/latest/w64/puttygen.exe"
        dest: "/usr/local/bin/puttygen.exe"
        mode: "0777"
        force: true
    - name: "shutter compatability fix"
      block:
        - name: "revert gdm back to x11"
          ansible.builtin.replace:
            path: "/etc/gdm3/custom.conf"
            regexp: "^#?WaylandEnable=.*$"
            replace: "WaylandEnable=false"
        - name: "restart display service"
          command: "bash -c 'systemctl restart gdm3'"
    - name: "apt install wine deps"
      apt:
        name: "{{ item }}"
        install_recommends: true
        state: "present"
      loop:
        - "wine"
        - "wine-stable"
        - "winetricks"
    - name: "Install snap deps"
      community.general.snap:
        name:
          - "dbeaver-ce"
          - "notepad-plus-plus"
          - "simple-scan"
          - "spotify"
          - "wine-platform-runtime-core20"
    - name: "Remove unused packages"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: "absent"
      loop:
        - "ed"
        - "thunderbird"
        - "vim-tiny"
        - "vim-common"
    - name: "Upgrade all packages on servers."
      apt:
        upgrade: "dist"
    - name: "Remove useless packages from the cache"
      apt:
        autoclean: true
    - name: "Remove dependencies that are no longer required"
      apt:
        autoremove: true
    - name: "Check if a reboot is needed on all servers."
      stat:
        path: "/var/run/reboot-required"
      register: "reboot_required_file"
    - name: "Reboot the box if kernel updated"
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 10
        test_command: "uptime"
      when: "reboot_required_file.stat.exists"
